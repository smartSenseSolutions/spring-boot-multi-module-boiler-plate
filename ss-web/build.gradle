plugins {
    id 'java-library'
    id 'jacoco-report-aggregation'
}


dependencies {
    //common
    implementation "com.smartsensesolutions:commons-dao:${commonsDaoVersion}"

    //spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // API doc
    implementation "org.springdoc:springdoc-openapi-starter-common:${openApiVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"

    //db
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    runtimeOnly 'org.postgresql:postgresql'

    //other module
    implementation project(":ss-service-impl")
    implementation project(":ss-service")

    //auth
    implementation "org.keycloak:keycloak-admin-client:${keycloakAdminClientVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    // testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.testcontainers:testcontainers"
    testImplementation "com.github.dasniko:testcontainers-keycloak:${keycloakTestContainerVersion}"
    testImplementation "org.testcontainers:postgresql"
    testImplementation "org.testcontainers:junit-jupiter"

    developmentOnly("org.springframework.boot:spring-boot-docker-compose")

}

bootJar {
    enabled = true
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom("org.testcontainers:testcontainers-bom:${testContainerVersion}")
    }
}

jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "${jacocoVersion}"
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.required = true
    }
}
