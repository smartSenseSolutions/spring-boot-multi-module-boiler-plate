{
  "id" : "SWD",
  "realm" : "SWD",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [
      {
        "id" : "7366a818-bdbc-4218-88bf-4074da5eb86a",
        "name" : "uma_authorization",
        "description" : "${role_uma_authorization}",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "SWD",
        "attributes" : {}
      },
      {
        "id" : "952da739-3a34-4e77-96f5-c1a0bfc949ed",
        "name" : "default-roles-swd",
        "description" : "${role_default-roles}",
        "composite" : true,
        "composites" : {
          "realm" : [
            "offline_access",
            "uma_authorization"
          ],
          "client" : {
            "account" : [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole" : false,
        "containerId" : "SWD",
        "attributes" : {}
      },
      {
        "id" : "50ed2351-0141-4bc6-b1b0-459ab720141e",
        "name" : "offline_access",
        "description" : "${role_offline-access}",
        "composite" : false,
        "clientRole" : false,
        "containerId" : "SWD",
        "attributes" : {}
      }
    ],
    "client" : {
      "realm-management" : [
        {
          "id" : "29061925-5ba9-4d4a-8358-5f7682301d91",
          "name" : "view-clients",
          "description" : "${role_view-clients}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [
                "query-clients"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "53cc37c4-bdd7-41e5-a453-43e5bd681a9f",
          "name" : "view-identity-providers",
          "description" : "${role_view-identity-providers}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "d3a1003f-9c37-4c20-b372-d10258496189",
          "name" : "manage-clients",
          "description" : "${role_manage-clients}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "18eec4c4-ed47-4314-9646-5e6479a596dd",
          "name" : "impersonation",
          "description" : "${role_impersonation}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "af3480e7-4c3e-415b-858b-e68daba7fa41",
          "name" : "view-realm",
          "description" : "${role_view-realm}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "fc5326ab-5e79-4d32-9492-45ec0dad0f03",
          "name" : "view-users",
          "description" : "${role_view-users}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "bcd9b23b-0332-4cc2-9bed-3161e50436da",
          "name" : "view-events",
          "description" : "${role_view-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "947a71e7-8e74-45a9-8327-e4773a2a6cf8",
          "name" : "manage-realm",
          "description" : "${role_manage-realm}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "5904932f-6b6a-4040-acb3-9ede3b1f367f",
          "name" : "manage-users",
          "description" : "${role_manage-users}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "a0a5637d-a5b5-4bfc-9a5d-faab6f16a7e0",
          "name" : "query-groups",
          "description" : "${role_query-groups}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "584356ef-2b7c-4c88-9216-cd76e041dbbf",
          "name" : "query-realms",
          "description" : "${role_query-realms}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "35bea71f-cda1-4582-9123-e2f88f012ce1",
          "name" : "create-client",
          "description" : "${role_create-client}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "8e6b66d2-7698-4652-af7f-b5bc1dec0e36",
          "name" : "query-users",
          "description" : "${role_query-users}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "0c9165cc-5401-4950-9af5-bcad0fc2d7f3",
          "name" : "query-clients",
          "description" : "${role_query-clients}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "4b3dffb3-9521-4de7-ae86-67f0ec323da5",
          "name" : "manage-identity-providers",
          "description" : "${role_manage-identity-providers}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "c7a6cf5e-81c2-47ab-9831-530acfa674c2",
          "name" : "manage-authorization",
          "description" : "${role_manage-authorization}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "2dd6690b-0743-467a-b1e2-952205735673",
          "name" : "view-authorization",
          "description" : "${role_view-authorization}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "5befbc4e-86f1-4b7c-8d17-adc727d419e5",
          "name" : "manage-events",
          "description" : "${role_manage-events}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        },
        {
          "id" : "d0946ada-c4ea-4fd5-96d3-81bdedbdd681",
          "name" : "realm-admin",
          "description" : "${role_realm-admin}",
          "composite" : true,
          "composites" : {
            "client" : {
              "realm-management" : [
                "view-clients",
                "view-identity-providers",
                "manage-clients",
                "impersonation",
                "view-realm",
                "view-users",
                "view-events",
                "manage-realm",
                "manage-users",
                "query-groups",
                "query-realms",
                "create-client",
                "query-users",
                "query-clients",
                "manage-identity-providers",
                "manage-authorization",
                "view-authorization",
                "manage-events"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "8859a491-343e-4605-8e92-8dde36217927",
          "attributes" : {}
        }
      ],
      "pb_backend" : [
        {
          "id" : "c962c61f-8435-4cbd-b89d-c62f3ad1962a",
          "name" : "SWD_ADMIN",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "e821526a-1073-46bc-ace8-eae7f5761c81",
          "attributes" : {}
        }
      ],
      "security-admin-console" : [],
      "admin-cli" : [],
      "account-console" : [],
      "broker" : [
        {
          "id" : "eff43bde-0ec7-4a9b-8310-d4420981f4fd",
          "name" : "read-token",
          "description" : "${role_read-token}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "ad01c4ba-2cb8-498f-aeb5-03a2200928b5",
          "attributes" : {}
        }
      ],
      "account" : [
        {
          "id" : "0832e288-3e77-46cf-9cd3-5626edab0c60",
          "name" : "manage-account",
          "description" : "${role_manage-account}",
          "composite" : true,
          "composites" : {
            "client" : {
              "account" : [
                "manage-account-links"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "9189caad-3c71-407f-acce-07e3be4c9a34",
          "attributes" : {}
        },
        {
          "id" : "12aaa5d2-3064-46f6-9e45-848f7fc9d482",
          "name" : "delete-account",
          "description" : "${role_delete-account}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "9189caad-3c71-407f-acce-07e3be4c9a34",
          "attributes" : {}
        },
        {
          "id" : "ac772efc-1f78-415b-a04e-355fa000f4b2",
          "name" : "view-applications",
          "description" : "${role_view-applications}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "9189caad-3c71-407f-acce-07e3be4c9a34",
          "attributes" : {}
        },
        {
          "id" : "03daa653-c0f6-4199-8994-43291583621e",
          "name" : "manage-account-links",
          "description" : "${role_manage-account-links}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "9189caad-3c71-407f-acce-07e3be4c9a34",
          "attributes" : {}
        },
        {
          "id" : "1ea15a8d-a891-4b13-b621-7f52fa73fea1",
          "name" : "manage-consent",
          "description" : "${role_manage-consent}",
          "composite" : true,
          "composites" : {
            "client" : {
              "account" : [
                "view-consent"
              ]
            }
          },
          "clientRole" : true,
          "containerId" : "9189caad-3c71-407f-acce-07e3be4c9a34",
          "attributes" : {}
        },
        {
          "id" : "bb90afd7-c538-4a92-93e5-06232d284261",
          "name" : "view-profile",
          "description" : "${role_view-profile}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "9189caad-3c71-407f-acce-07e3be4c9a34",
          "attributes" : {}
        },
        {
          "id" : "0fde7964-0118-46c4-92ca-79f7c3fda229",
          "name" : "view-consent",
          "description" : "${role_view-consent}",
          "composite" : false,
          "clientRole" : true,
          "containerId" : "9189caad-3c71-407f-acce-07e3be4c9a34",
          "attributes" : {}
        }
      ]
    }
  },
  "groups" : [
  ],
  "defaultRole" : {
    "id" : "952da739-3a34-4e77-96f5-c1a0bfc949ed",
    "name" : "default-roles-swd",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "SWD"
  },
  "requiredCredentials" : [
    "password"
  ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [
    "ES256"
  ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [],
  "users" : [
    {
      "id" : "663f5cd5-6573-4013-8e26-3fbb3bb36541",
      "username" : "valid-user",
      "email" : "valid-user@valid.user",
      "firstName" : "Valid",
      "lastName" : "User",
      "enabled" : true,
      "emailVerified" : true,
      "attributes" : {
        "bpn" : [
          "abc"
        ]
      },
      "credentials" : [
        {
          "type" : "password",
          "value" : "password"
        }
      ],
      "clientRoles" : {
        "account" : [
          "view-profile",
          "manage-account"
        ],
        "pv_backend" : [
          "SWD_ADMIN"
        ]
      }
    },
    {
      "id" : "663f5cd5-6573-4013-8e26-3fbb3bb36542",
      "username" : "invalid-user",
      "email" : "invalid.user@invalidate.user",
      "firstName" : "Invalid",
      "lastName" : "User",
      "enabled" : true,
      "emailVerified" : true,
      "attributes" : {
        "bpn" : [
          "abc"
        ]
      },
      "credentials" : [
        {
          "type" : "password",
          "value" : "password"
        }
      ],
      "clientRoles" : {
        "account" : [
          "view-profile",
          "manage-account"
        ]
      }
    }
  ],
  "scopeMappings" : [
    {
      "clientScope" : "offline_access",
      "roles" : [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings" : {
    "account" : [
      {
        "client" : "account-console",
        "roles" : [
          "manage-account"
        ]
      }
    ]
  },
  "clients" : [
    {
      "id" : "9189caad-3c71-407f-acce-07e3be4c9a34",
      "clientId" : "account",
      "name" : "${client_account}",
      "rootUrl" : "${authBaseUrl}",
      "baseUrl" : "/realms/SWD/account/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [
        "/realms/SWD/account/*"
      ],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {},
      "authenticationFlowBindingOverrides" : {},
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "759b8a41-76e6-4e11-86e6-6b919a87ba7d",
      "clientId" : "account-console",
      "name" : "${client_account-console}",
      "rootUrl" : "${authBaseUrl}",
      "baseUrl" : "/realms/SWD/account/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [
        "/realms/SWD/account/*"
      ],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "pkce.code.challenge.method" : "S256"
      },
      "authenticationFlowBindingOverrides" : {},
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "protocolMappers" : [
        {
          "id" : "9251f546-fd37-46f8-8e4c-d22dcb4b6674",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : {}
        }
      ],
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "23ee1810-928f-4bd7-9475-bd5ed9c3ba91",
      "clientId" : "admin-cli",
      "name" : "${client_admin-cli}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {},
      "authenticationFlowBindingOverrides" : {},
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "ad01c4ba-2cb8-498f-aeb5-03a2200928b5",
      "clientId" : "broker",
      "name" : "${client_broker}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : true,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {},
      "authenticationFlowBindingOverrides" : {},
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "e821526a-1073-46bc-ace8-eae7f5761c81",
      "clientId" : "pb_backend",
      "rootUrl" : "http://localhost:8081/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [
        "http://localhost:8083/*"
      ],
      "webOrigins" : [
        "http://localhost:8083"
      ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "id.token.as.detached.signature" : "false",
        "saml.assertion.signature" : "false",
        "saml.force.post.binding" : "false",
        "saml.multivalued.roles" : "false",
        "saml.encrypt" : "false",
        "oauth2.device.authorization.grant.enabled" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false",
        "saml.server.signature" : "false",
        "saml.server.signature.keyinfo.ext" : "false",
        "use.refresh.tokens" : "true",
        "exclude.session.state.from.auth.response" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "saml.artifact.binding" : "false",
        "backchannel.logout.session.required" : "true",
        "client_credentials.use_refresh_token" : "false",
        "saml_force_name_id_format" : "false",
        "require.pushed.authorization.requests" : "false",
        "saml.client.signature" : "false",
        "tls.client.certificate.bound.access.tokens" : "false",
        "saml.authnstatement" : "false",
        "display.on.consent.screen" : "false",
        "saml.onetimeuse.condition" : "false"
      },
      "authenticationFlowBindingOverrides" : {},
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "protocolMappers" : [
        {
          "id" : "0125293c-3a51-41af-a2fc-1a379abab087",
          "name" : "bpn_mapper",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "false",
            "user.attribute" : "bpn",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "bpn",
            "jsonType.label" : "String"
          }
        }
      ],
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "1155a5e3-0c8e-46af-86c2-2f95008e74eb",
      "clientId" : "pv_backend",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "**********",
      "redirectUris" : [],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : false,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "id.token.as.detached.signature" : "false",
        "saml.assertion.signature" : "false",
        "saml.force.post.binding" : "false",
        "saml.multivalued.roles" : "false",
        "saml.encrypt" : "false",
        "oauth2.device.authorization.grant.enabled" : "false",
        "backchannel.logout.revoke.offline.tokens" : "false",
        "saml.server.signature" : "false",
        "saml.server.signature.keyinfo.ext" : "false",
        "use.refresh.tokens" : "true",
        "exclude.session.state.from.auth.response" : "false",
        "oidc.ciba.grant.enabled" : "false",
        "saml.artifact.binding" : "false",
        "backchannel.logout.session.required" : "true",
        "client_credentials.use_refresh_token" : "false",
        "saml_force_name_id_format" : "false",
        "require.pushed.authorization.requests" : "false",
        "saml.client.signature" : "false",
        "tls.client.certificate.bound.access.tokens" : "false",
        "saml.authnstatement" : "false",
        "display.on.consent.screen" : "false",
        "saml.onetimeuse.condition" : "false"
      },
      "authenticationFlowBindingOverrides" : {},
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "protocolMappers" : [
        {
          "id" : "707a9009-b5c7-4ee1-b9e4-98ba476f82ea",
          "name" : "Client IP Address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientAddress",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientAddress",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "3e5c31be-a60d-48a8-a408-50fd748b8b01",
          "name" : "Client Host",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientHost",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientHost",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "3dcec58b-95a5-43fc-93e4-24bed241ab41",
          "name" : "bpn_mapper",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "false",
            "user.attribute" : "bpn",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "bpn",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "1cfcbc2d-28a0-4741-99fb-873c7465d26e",
          "name" : "Client ID",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientId",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientId",
            "jsonType.label" : "String"
          }
        }
      ],
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "8859a491-343e-4605-8e92-8dde36217927",
      "clientId" : "realm-management",
      "name" : "${client_realm-management}",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [],
      "webOrigins" : [],
      "notBefore" : 0,
      "bearerOnly" : true,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {},
      "authenticationFlowBindingOverrides" : {},
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id" : "1d232440-4d31-4667-9443-9f169ebe2384",
      "clientId" : "security-admin-console",
      "name" : "${client_security-admin-console}",
      "rootUrl" : "${authAdminUrl}",
      "baseUrl" : "/admin/SWD/console/",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "alwaysDisplayInConsole" : false,
      "clientAuthenticatorType" : "client-secret",
      "redirectUris" : [
        "/admin/SWD/console/*"
      ],
      "webOrigins" : [
        "+"
      ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : false,
      "serviceAccountsEnabled" : false,
      "publicClient" : true,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "pkce.code.challenge.method" : "S256"
      },
      "authenticationFlowBindingOverrides" : {},
      "fullScopeAllowed" : false,
      "nodeReRegistrationTimeout" : 0,
      "protocolMappers" : [
        {
          "id" : "7b9fd34b-85df-49d3-aac9-249ec57de7eb",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }
      ],
      "defaultClientScopes" : [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes" : [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes" : [
    {
      "id" : "5d7438e7-4b27-4c30-91c0-c0760c32b080",
      "name" : "email",
      "description" : "OpenID Connect built-in scope: email",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "display.on.consent.screen" : "true",
        "consent.screen.text" : "${emailScopeConsentText}"
      },
      "protocolMappers" : [
        {
          "id" : "62850c21-a67e-426a-8764-1e0e588428fd",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        },
        {
          "id" : "7b9bac18-478c-4b07-afe9-e5a1e72e6a47",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        }
      ]
    },
    {
      "id" : "e0bea855-da7a-4ee9-97cf-a0e76bd1c541",
      "name" : "microprofile-jwt",
      "description" : "Microprofile - JWT built-in scope",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "display.on.consent.screen" : "false"
      },
      "protocolMappers" : [
        {
          "id" : "694a0ed2-d7a8-4d8a-a8a6-c61bf19b12db",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "023b79c1-64d3-465c-9532-a9d5ed71bab6",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "multivalued" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        }
      ]
    },
    {
      "id" : "27c95874-3017-43da-a359-33c89440763f",
      "name" : "web-origins",
      "description" : "OpenID Connect scope for add allowed web origins to the access token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "display.on.consent.screen" : "false",
        "consent.screen.text" : ""
      },
      "protocolMappers" : [
        {
          "id" : "a4912cbf-796e-4e6e-95a1-f7a884f71737",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : {}
        }
      ]
    },
    {
      "id" : "0a188237-c4a5-4fdb-bf3f-ac8353523521",
      "name" : "profile",
      "description" : "OpenID Connect built-in scope: profile",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "display.on.consent.screen" : "true",
        "consent.screen.text" : "${profileScopeConsentText}"
      },
      "protocolMappers" : [
        {
          "id" : "4e195739-db1f-43df-88ad-84a95eed66d6",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "02c32657-177e-4e22-8ed7-8870c1887412",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "38893d3d-dfc1-4b6f-adca-e1e200c989cf",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "4ecd2eb5-4f5c-4bd4-9b9f-575af9af6d1b",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "0934f13e-7c5f-478a-bac6-0022e6112a55",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "35a6e3ba-b2c1-4c59-8e2c-3a8de07c858e",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "084d30db-af79-4b49-8dc3-45fc2cf480dc",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "44a01a4b-1ddb-45e3-b333-e8940c389be5",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "f65a6b91-bd28-4d4c-9807-8954e7ba24a2",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "81f8b628-c0ad-4e63-ab31-f6cbeb31a000",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "44014f72-3bee-49ab-b790-89709f8e73ec",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "82313ac9-92f9-4160-9db9-6947ca07bfe0",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "c1562fb5-d76c-47a8-8868-afcdb1e7a3fd",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "53af0384-f344-4e2d-927a-60b806c8f69d",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }
      ]
    },
    {
      "id" : "23912d34-5243-41af-b90b-fdbb11ed6094",
      "name" : "address",
      "description" : "OpenID Connect built-in scope: address",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "display.on.consent.screen" : "true",
        "consent.screen.text" : "${addressScopeConsentText}"
      },
      "protocolMappers" : [
        {
          "id" : "53c5087f-d1d4-4f9e-b3e1-7f0f7afa7473",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        }
      ]
    },
    {
      "id" : "9e9be99b-2e11-4be8-828b-b488b6cddb23",
      "name" : "offline_access",
      "description" : "OpenID Connect built-in scope: offline_access",
      "protocol" : "openid-connect",
      "attributes" : {
        "consent.screen.text" : "${offlineAccessScopeConsentText}",
        "display.on.consent.screen" : "true"
      }
    },
    {
      "id" : "6eaafd4d-91e7-4015-a938-ccaffac4e325",
      "name" : "role_list",
      "description" : "SAML role list",
      "protocol" : "saml",
      "attributes" : {
        "consent.screen.text" : "${samlRoleListScopeConsentText}",
        "display.on.consent.screen" : "true"
      },
      "protocolMappers" : [
        {
          "id" : "ea7a49fc-9e51-437a-a147-f84e32dffea0",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        }
      ]
    },
    {
      "id" : "bdcdc6c8-9451-4195-a25f-27a2cc9bcd0a",
      "name" : "roles",
      "description" : "OpenID Connect scope for add user roles to the access token",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "false",
        "display.on.consent.screen" : "true",
        "consent.screen.text" : "${rolesScopeConsentText}"
      },
      "protocolMappers" : [
        {
          "id" : "52027bc8-70b3-4355-8f83-82e0c8ffe50f",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-group-membership-mapper",
          "consentRequired" : false,
          "config" : {
            "full.path" : "false",
            "id.token.claim" : "false",
            "access.token.claim" : "true",
            "claim.name" : "groups_name",
            "userinfo.token.claim" : "false"
          }
        },
        {
          "id" : "6ff0aa9d-f619-4886-8a8e-cdd4c313c969",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        },
        {
          "id" : "e657494f-450a-4996-a599-1bea43322796",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        },
        {
          "id" : "32a543cc-481d-461a-94dd-4c7454293f2d",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : {}
        }
      ]
    },
    {
      "id" : "f8c08615-c5f6-4684-9ffa-a454d5a6550b",
      "name" : "phone",
      "description" : "OpenID Connect built-in scope: phone",
      "protocol" : "openid-connect",
      "attributes" : {
        "include.in.token.scope" : "true",
        "display.on.consent.screen" : "true",
        "consent.screen.text" : "${phoneScopeConsentText}"
      },
      "protocolMappers" : [
        {
          "id" : "23f04185-cea5-4dec-9a80-04d6a53ce20c",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        },
        {
          "id" : "908f884a-1b9e-4829-9706-ec8cf19a3b5f",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes" : [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes" : [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : {},
  "eventsEnabled" : false,
  "eventsListeners" : [
    "jboss-logging"
  ],
  "enabledEventTypes" : [],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [],
  "identityProviderMappers" : [],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [
      {
        "id" : "b60a2a1b-9c4d-42cb-bbb8-bf2ced4eb847",
        "name" : "Trusted Hosts",
        "providerId" : "trusted-hosts",
        "subType" : "anonymous",
        "subComponents" : {},
        "config" : {
          "host-sending-registration-request-must-match" : [
            "true"
          ],
          "client-uris-must-match" : [
            "true"
          ]
        }
      },
      {
        "id" : "18b87860-2f0d-48a0-ba25-cb3857592915",
        "name" : "Max Clients Limit",
        "providerId" : "max-clients",
        "subType" : "anonymous",
        "subComponents" : {},
        "config" : {
          "max-clients" : [
            "200"
          ]
        }
      },
      {
        "id" : "e332a346-94c1-4420-87d8-e6bed31acf8f",
        "name" : "Full Scope Disabled",
        "providerId" : "scope",
        "subType" : "anonymous",
        "subComponents" : {},
        "config" : {}
      },
      {
        "id" : "84075da1-2b4a-4a4a-a1cf-e61ce330c3eb",
        "name" : "Allowed Client Scopes",
        "providerId" : "allowed-client-templates",
        "subType" : "anonymous",
        "subComponents" : {},
        "config" : {
          "allow-default-scopes" : [
            "true"
          ]
        }
      },
      {
        "id" : "8c908478-4cf6-47b8-94aa-e55d3963d817",
        "name" : "Allowed Protocol Mapper Types",
        "providerId" : "allowed-protocol-mappers",
        "subType" : "anonymous",
        "subComponents" : {},
        "config" : {
          "allowed-protocol-mapper-types" : [
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id" : "a8c8e52d-2d3f-4107-83b5-e4d35a900d72",
        "name" : "Consent Required",
        "providerId" : "consent-required",
        "subType" : "anonymous",
        "subComponents" : {},
        "config" : {}
      },
      {
        "id" : "8821fc29-657c-4b7b-8254-32f52db0dcd7",
        "name" : "Allowed Client Scopes",
        "providerId" : "allowed-client-templates",
        "subType" : "authenticated",
        "subComponents" : {},
        "config" : {
          "allow-default-scopes" : [
            "true"
          ]
        }
      },
      {
        "id" : "08799dcf-bcb3-4a74-87a7-1eab18cdfa1d",
        "name" : "Allowed Protocol Mapper Types",
        "providerId" : "allowed-protocol-mappers",
        "subType" : "authenticated",
        "subComponents" : {},
        "config" : {
          "allowed-protocol-mapper-types" : [
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider" : [
      {
        "id" : "7b560203-57ce-4b66-af5c-1f334a2544ae",
        "name" : "rsa-enc-generated",
        "providerId" : "rsa-enc-generated",
        "subComponents" : {},
        "config" : {
          "priority" : [
            "100"
          ],
          "algorithm" : [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id" : "da811c7f-8bb9-4c21-868b-4813b0078a7e",
        "name" : "aes-generated",
        "providerId" : "aes-generated",
        "subComponents" : {},
        "config" : {
          "priority" : [
            "100"
          ]
        }
      },
      {
        "id" : "af103796-b457-480c-bced-26ef896a98c4",
        "name" : "hmac-generated",
        "providerId" : "hmac-generated",
        "subComponents" : {},
        "config" : {
          "priority" : [
            "100"
          ],
          "algorithm" : [
            "HS256"
          ]
        }
      },
      {
        "id" : "21dc3f1f-61de-4514-9e77-3b1dec1be88f",
        "name" : "rsa-generated",
        "providerId" : "rsa-generated",
        "subComponents" : {},
        "config" : {
          "priority" : [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [],
  "authenticationFlows" : [
    {
      "id" : "510f382d-68c3-455c-bf37-27335b2cbedf",
      "alias" : "Account verification options",
      "description" : "Method with which to verity the existing account",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "idp-email-verification",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "917395a2-2822-4746-8803-1fe1827a107f",
      "alias" : "Authentication Options",
      "description" : "Authentication options.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "basic-auth",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "basic-auth-otp",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 30,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    },
    {
      "id" : "44185687-f2ef-496e-a3d4-0d0435429e60",
      "alias" : "Browser - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    },
    {
      "id" : "0c5df3f5-c6d0-47c8-ba78-d3c86ce23e68",
      "alias" : "Direct Grant - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "direct-grant-validate-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    },
    {
      "id" : "90583916-ce57-43d5-b80d-124cca337f46",
      "alias" : "First broker login - Conditional OTP",
      "description" : "Flow to determine if the OTP is required for the authentication",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    },
    {
      "id" : "ae7a9050-fa3e-4ca6-97ce-41ec1b9b0932",
      "alias" : "Handle Existing Account",
      "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "idp-confirm-link",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "91b7598a-bf6b-40d6-841f-c7e63713da71",
      "alias" : "Reset - Conditional OTP",
      "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "reset-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    },
    {
      "id" : "31af7b4f-6658-4df0-8858-a3230b9889ea",
      "alias" : "User creation or linking",
      "description" : "Flow for the existing/non-existing user alternatives",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "d618ed95-018a-4ca1-a018-920537c6cf0b",
      "alias" : "Verify Existing Account by Re-authentication",
      "description" : "Reauthentication of existing account",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "idp-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "733cbe10-d665-44c4-9cf8-c187ab6ed3f1",
      "alias" : "browser",
      "description" : "browser based authentication",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "auth-cookie",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "identity-provider-redirector",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "flowAlias" : "forms",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "b7308901-4e88-4a79-a3a9-a5efd7f3781f",
      "alias" : "clients",
      "description" : "Base authentication for clients",
      "providerId" : "client-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "client-secret",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "client-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "client-secret-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "client-x509",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    },
    {
      "id" : "beea8855-951a-40ee-80d3-623bf3ec531d",
      "alias" : "direct grant",
      "description" : "OpenID Connect Resource Owner Grant",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "direct-grant-validate-username",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "direct-grant-validate-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "a20645ee-4545-4956-b790-56b6673c5ff6",
      "alias" : "docker auth",
      "description" : "Used by Docker clients to authenticate against the IDP",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "docker-http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    },
    {
      "id" : "5f58902d-ff8f-4302-b057-9b9a2994e16a",
      "alias" : "first broker login",
      "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "06374fe1-6bef-4875-bfc1-b6a670c2d175",
      "alias" : "forms",
      "description" : "Username, password, otp and other auth forms.",
      "providerId" : "basic-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "auth-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "84f80225-3074-4046-a6df-8d8e8e4aa12e",
      "alias" : "http challenge",
      "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "no-cookie-redirect",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "flowAlias" : "Authentication Options",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "7f08d8eb-176f-4106-b93a-25ad5d6e376a",
      "alias" : "registration",
      "description" : "registration flow",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "registration-page-form",
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "88d6ffa4-341f-4396-b23b-405d7a7fad8e",
      "alias" : "registration form",
      "description" : "registration form",
      "providerId" : "form-flow",
      "topLevel" : false,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "registration-user-creation",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "registration-profile-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 40,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "registration-password-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 50,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "registration-recaptcha-action",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 60,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    },
    {
      "id" : "799e69be-0d18-40cf-8365-af98e0474af6",
      "alias" : "reset credentials",
      "description" : "Reset credentials for a user if they forgot their password or something",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "reset-credentials-choose-user",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "reset-credential-email",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticator" : "reset-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 30,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        },
        {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false,
          "autheticatorFlow" : true
        }
      ]
    },
    {
      "id" : "52b12ab1-3899-4650-bc82-dbb158df4b10",
      "alias" : "saml ecp",
      "description" : "SAML ECP Profile Authentication Flow",
      "providerId" : "basic-flow",
      "topLevel" : true,
      "builtIn" : true,
      "authenticationExecutions" : [
        {
          "authenticator" : "http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "userSetupAllowed" : false,
          "autheticatorFlow" : false
        }
      ]
    }
  ],
  "authenticatorConfig" : [
    {
      "id" : "21a6174f-6e5c-4767-8464-6de95140487f",
      "alias" : "create unique user config",
      "config" : {
        "require.password.update.after.registration" : "false"
      }
    },
    {
      "id" : "4433a716-bde5-41b0-b799-9f62cfc14efa",
      "alias" : "review profile config",
      "config" : {
        "update.profile.on.first.login" : "missing"
      }
    }
  ],
  "requiredActions" : [
    {
      "alias" : "CONFIGURE_TOTP",
      "name" : "Configure OTP",
      "providerId" : "CONFIGURE_TOTP",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 10,
      "config" : {}
    },
    {
      "alias" : "terms_and_conditions",
      "name" : "Terms and Conditions",
      "providerId" : "terms_and_conditions",
      "enabled" : false,
      "defaultAction" : false,
      "priority" : 20,
      "config" : {}
    },
    {
      "alias" : "UPDATE_PASSWORD",
      "name" : "Update Password",
      "providerId" : "UPDATE_PASSWORD",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 30,
      "config" : {}
    },
    {
      "alias" : "UPDATE_PROFILE",
      "name" : "Update Profile",
      "providerId" : "UPDATE_PROFILE",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 40,
      "config" : {}
    },
    {
      "alias" : "VERIFY_EMAIL",
      "name" : "Verify Email",
      "providerId" : "VERIFY_EMAIL",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 50,
      "config" : {}
    },
    {
      "alias" : "delete_account",
      "name" : "Delete Account",
      "providerId" : "delete_account",
      "enabled" : false,
      "defaultAction" : false,
      "priority" : 60,
      "config" : {}
    },
    {
      "alias" : "update_user_locale",
      "name" : "Update User Locale",
      "providerId" : "update_user_locale",
      "enabled" : true,
      "defaultAction" : false,
      "priority" : 1000,
      "config" : {}
    }
  ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "16.1.1",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : []
  },
  "clientPolicies" : {
    "policies" : []
  }
}
